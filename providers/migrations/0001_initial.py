# Generated by Django 4.0.4 on 2022-05-27 20:05

import django.contrib.auth.base_user
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ProviderModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('phone_number', models.CharField(max_length=15)),
                ('language', models.CharField(choices=[('english', 'english'), ('urdu', 'urdu'), ('other', 'other')], default='english', max_length=15)),
                ('currency', models.CharField(choices=[('usd', 'usd'), ('pkr', 'pkr'), ('other', 'other')], default='usd', max_length=6)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, django.contrib.auth.base_user.BaseUserManager),
        ),
        migrations.CreateModel(
            name='ServiceModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('price', models.IntegerField()),
                ('geojson', django.contrib.gis.db.models.fields.PolygonField(geography=True, srid=4326)),
                ('information', models.CharField(max_length=500)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_provider', to='providers.providermodel')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, django.contrib.auth.base_user.BaseUserManager),
        ),
    ]
